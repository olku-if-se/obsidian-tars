.serverCard {
  border: var(--border-width) solid var(--background-modifier-border);
  border-radius: var(--radius-m);
  background-color: var(--background-primary);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  margin-bottom: var(--size-4-2);
  padding: var(--size-4-2);
}

.serverCard:hover {
  border-color: var(--interactive-accent);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.serverCard.selected {
  border-color: var(--interactive-accent);
  box-shadow: 0 0 0 1px var(--interactive-accent);
}

.serverCard.loading {
  opacity: 0.7;
  pointer-events: none;
}

/* Status-based styling */
.serverCard.error {
  border-color: var(--color-red);
  background-color: var(--background-modifier-error-soft);
}

.serverCard.warning {
  border-color: var(--color-orange);
  background-color: var(--background-modifier-warning-soft);
}

.serverCard.success {
  border-color: var(--color-green);
  background-color: var(--background-modifier-success-soft);
}

/* Controls container for row 1 */
.controlsContainer {
  display: flex;
  align-items: center;
  gap: var(--size-2-2);
  flex-wrap: wrap;
}

.controlsContainer.loading {
  opacity: 0.6;
}

/* Server name input */
.serverNameInput {
  width: 100%;
  padding: var(--size-2-1);
  border: 1px solid var(--background-modifier-border);
  border-radius: var(--radius-s);
  background-color: var(--background-primary);
  color: var(--text-normal);
  font-size: var(--font-ui-small);
  font-family: var(--font-interface);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.serverNameInput:focus {
  outline: none;
  border-color: var(--interactive-accent);
  box-shadow: 0 0 0 1px var(--interactive-accent);
}

.serverNameInput:disabled {
  background-color: var(--background-secondary);
  color: var(--text-muted);
  cursor: not-allowed;
}

/* Status container for row 4 */
.statusContainer {
  display: flex;
  flex-direction: column;
  gap: var(--size-2-1);
  min-height: var(--size-4-3);
}

.statusMessage {
  padding: var(--size-1-2) var(--size-2-2);
  border-radius: var(--radius-s);
  font-size: var(--font-ui-small);
  font-weight: var(--font-medium);
  border: 1px solid;
}

.statusMessage.success {
  background-color: var(--background-success);
  color: var(--text-success);
  border-color: var(--color-success);
}

.statusMessage.error {
  background-color: var(--background-error);
  color: var(--text-error);
  border-color: var(--color-error);
}

.statusMessage.warning {
  background-color: var(--background-warning);
  color: var(--text-warning);
  border-color: var(--color-orange);
}

.statusMessage.info {
  background-color: var(--background-info);
  color: var(--text-info);
  border-color: var(--color-blue);
}

.statusMessage.loading {
  background-color: var(--background-modifier-hover);
  color: var(--text-muted);
  border-color: var(--background-modifier-border);
  position: relative;
}

.statusMessage.loading::after {
  content: '';
  position: absolute;
  right: var(--size-2-2);
  top: 50%;
  transform: translateY(-50%);
  width: 12px;
  height: 12px;
  border: 2px solid var(--text-muted);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to { transform: translateY(-50%) rotate(360deg); }
}

.statusDetail {
  display: flex;
  gap: var(--size-2-1);
  align-items: center;
  font-size: var(--font-ui-smaller);
}

.statusLabel {
  font-weight: var(--font-medium);
  color: var(--text-muted);
  min-width: 60px;
  flex-shrink: 0;
}

.statusValue {
  color: var(--text-normal);
  font-family: var(--font-monospace);
  background-color: var(--background-secondary);
  padding: var(--size-1-1) var(--size-2-1);
  border-radius: var(--radius-s);
  border: 1px solid var(--background-modifier-border);
  word-break: break-all;
  font-size: var(--font-ui-smaller);
}

/* Validation error and warning displays */
.validationErrors,
.validationWarnings {
  display: flex;
  flex-direction: column;
  gap: var(--size-1-1);
  margin-top: var(--size-1-1);
}

.errorMessage,
.warningMessage {
  padding: var(--size-1-1) var(--size-2-1);
  border-radius: var(--radius-s);
  font-size: var(--font-ui-smaller);
  line-height: 1.4;
  border-left: 3px solid;
}

.errorMessage {
  background-color: var(--background-modifier-error-soft);
  color: var(--text-error);
  border-left-color: var(--color-red);
}

.warningMessage {
  background-color: var(--background-modifier-warning-soft);
  color: var(--text-warning);
  border-left-color: var(--color-orange);
}

/* Dark theme adjustments */
[data-theme="dark"] .serverCard {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

[data-theme="dark"] .serverCard:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
}

[data-theme="dark"] .serverCard.selected {
  box-shadow: 0 0 0 1px var(--interactive-accent), 0 1px 3px rgba(0, 0, 0, 0.3);
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .controlsContainer {
    flex-direction: column;
    align-items: stretch;
    gap: var(--size-1-2);
  }

  .controlsContainer > * {
    width: 100%;
  }

  .statusDetail {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--size-1-1);
  }

  .statusLabel {
    min-width: auto;
  }

  .serverCard {
    margin-bottom: var(--size-4-1);
  }
}

/* Dark theme adjustments */
[data-theme="dark"] .serverCard {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

[data-theme="dark"] .serverCard:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
}

[data-theme="dark"] .serverCard.selected {
  box-shadow: 0 0 0 1px var(--interactive-accent), 0 1px 3px rgba(0, 0, 0, 0.3);
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .serverHeader {
    flex-direction: column;
    align-items: stretch;
    gap: var(--size-2-2);
  }

  .serverControls {
    justify-content: flex-end;
    flex-wrap: wrap;
    gap: var(--size-2-1);
  }

  .serverName {
    font-size: var(--font-ui-medium);
  }

  .serverCard {
    padding: var(--size-4-1);
  }
}

/* Focus states for accessibility */
.serverCard:focus-within {
  outline: 2px solid var(--interactive-accent);
  outline-offset: 2px;
}

/* Animation for loading state */
@keyframes pulse {
  0%, 100% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.4;
  }
}

.serverCard.loading {
  animation: pulse 1.5s ease-in-out infinite;
}